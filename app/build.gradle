apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda' // lambda插件
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'

Properties properties = new Properties();
properties.load(new FileInputStream(file("../config/signing.properties")))

static def releaseTime() {
    return new Date().format("MMddHH", TimeZone.getTimeZone("CTT"))
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        applicationId "com.miguan.yjy"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        ndk {
//            //选择要添加的对应cpu类型的.so库。
//            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86'
//            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
//        }

        resConfigs "zh-rCN", "zh-rHK", "zh-rTW", "en"

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "4d700539c3b82c3ab840d3c0", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        multiDexEnabled true

    }

    signingConfigs {
        release {
            keyAlias properties['KEY_ALIAS']
            keyPassword properties['KEY_PASSWORD']
            storeFile file(properties['KEYSTORE_FILE'])
            storePassword properties['KEY_PASSWORD']
        }
        debug {
            storeFile file('debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //签名
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro', 'proguard-jpush.pro'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro', 'proguard-jpush.pro'
        }
    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                //这里修改apk文件名
//                def fileName = "YJY_${defaultConfig.versionName}_${releaseTime()}.apk"
//                output.outputFile = new File(outputFile.parent, fileName)
//            }
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        应用宝{}
        qihu360{}
        小米{}
        豌豆荚{}
        华为{}
        魅族{}
        vivo{}
        oppo{}
        活动{}
        其他{}
    }
    //应用到每一个flavor
    productFlavors.all { flavor -> manifestPlaceholders.put("UMENG_CHANNEL", name) }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile project(':chain')
    compile project(':umshare')
    compile project(':processors')

    // support
    compile rootProject.ext.dependencies["constraint-layout"];

    // network
    compile rootProject.ext.dependencies["retrofit"];
    compile rootProject.ext.dependencies["retrofit-converter-gson"];
    compile rootProject.ext.dependencies["retrofit-adapter-rxjava"];
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-transformations"]

    // tools
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.dsk:imageprovider:2.2.1'
    compile 'com.github.promeg:tinypinyin:2.0.3' // TinyPinyin核心包，约80KB
    compile 'com.android.support:multidex:1.0.1' // 分包

    // view
    compile rootProject.ext.dependencies["swipelayout"]
    compile rootProject.ext.dependencies["pickerview"]
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["photoview"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    compile 'com.jude:exgridview:1.1.5'
    compile 'q.rorbin:badgeview:1.1.0'
    compile 'com.elyeproj.libraries:loaderviewlibrary:1.3.0'

    // 第三方
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'cn.jiguang.sdk:jpush:3.0.3'
    compile 'cn.jiguang.sdk:jcore:1.1.1'

    // test
    testCompile rootProject.ext.dependencies["junit"]
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //安全基础
    compile 'com.taobao.android:securityguardaar3:5.1.81@aar'
    //applink
    compile 'com.alibaba.sdk.android:alibc_link_partner:1.1.0.0'
    //电商SDK
    compile 'com.alibaba.sdk.android:alibc_trade_common:3.1.1.99'
    compile 'com.alibaba.sdk.android:alibc_trade_biz:3.1.1.99'
    compile 'com.alibaba.sdk.android:alibc_trade_sdk:3.1.1.99'

}
